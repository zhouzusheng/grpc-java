// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc/lookup/v1/rls_config.proto

package io.grpc.lookup.v1;

/**
 * Protobuf type {@code grpc.lookup.v1.RouteLookupConfig}
 */
public  final class RouteLookupConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:grpc.lookup.v1.RouteLookupConfig)
    RouteLookupConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RouteLookupConfig.newBuilder() to construct.
  private RouteLookupConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RouteLookupConfig() {
    httpKeybuilders_ = java.util.Collections.emptyList();
    grpcKeybuilders_ = java.util.Collections.emptyList();
    lookupService_ = "";
    cacheSizeBytes_ = 0L;
    validTargets_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    defaultTarget_ = "";
    requestProcessingStrategy_ = 0;
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private RouteLookupConfig(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              httpKeybuilders_ = new java.util.ArrayList<HttpKeyBuilder>();
              mutable_bitField0_ |= 0x00000001;
            }
            httpKeybuilders_.add(
                input.readMessage(HttpKeyBuilder.parser(), extensionRegistry));
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              grpcKeybuilders_ = new java.util.ArrayList<GrpcKeyBuilder>();
              mutable_bitField0_ |= 0x00000002;
            }
            grpcKeybuilders_.add(
                input.readMessage(GrpcKeyBuilder.parser(), extensionRegistry));
            break;
          }
          case 26: {
            String s = input.readStringRequireUtf8();

            lookupService_ = s;
            break;
          }
          case 34: {
            com.google.protobuf.Duration.Builder subBuilder = null;
            if (lookupServiceTimeout_ != null) {
              subBuilder = lookupServiceTimeout_.toBuilder();
            }
            lookupServiceTimeout_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(lookupServiceTimeout_);
              lookupServiceTimeout_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            com.google.protobuf.Duration.Builder subBuilder = null;
            if (maxAge_ != null) {
              subBuilder = maxAge_.toBuilder();
            }
            maxAge_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(maxAge_);
              maxAge_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            com.google.protobuf.Duration.Builder subBuilder = null;
            if (staleAge_ != null) {
              subBuilder = staleAge_.toBuilder();
            }
            staleAge_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(staleAge_);
              staleAge_ = subBuilder.buildPartial();
            }

            break;
          }
          case 56: {

            cacheSizeBytes_ = input.readInt64();
            break;
          }
          case 66: {
            String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
              validTargets_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000080;
            }
            validTargets_.add(s);
            break;
          }
          case 74: {
            String s = input.readStringRequireUtf8();

            defaultTarget_ = s;
            break;
          }
          case 80: {
            int rawValue = input.readEnum();

            requestProcessingStrategy_ = rawValue;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        httpKeybuilders_ = java.util.Collections.unmodifiableList(httpKeybuilders_);
      }
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        grpcKeybuilders_ = java.util.Collections.unmodifiableList(grpcKeybuilders_);
      }
      if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
        validTargets_ = validTargets_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return RlsConfigProto.internal_static_grpc_lookup_v1_RouteLookupConfig_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return RlsConfigProto.internal_static_grpc_lookup_v1_RouteLookupConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            RouteLookupConfig.class, Builder.class);
  }

  /**
   * <pre>
   * Specify how to process a request when not already in the cache.
   * </pre>
   *
   * Protobuf enum {@code grpc.lookup.v1.RouteLookupConfig.RequestProcessingStrategy}
   */
  public enum RequestProcessingStrategy
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>STRATEGY_UNSPECIFIED = 0;</code>
     */
    STRATEGY_UNSPECIFIED(0),
    /**
     * <pre>
     * Query the RLS and process the request using target returned by the
     * lookup. The target will then be cached and used for processing
     * subsequent requests for the same key. Any errors during lookup service
     * processing will fall back to default target for request processing.
     * </pre>
     *
     * <code>SYNC_LOOKUP_DEFAULT_TARGET_ON_ERROR = 1;</code>
     */
    SYNC_LOOKUP_DEFAULT_TARGET_ON_ERROR(1),
    /**
     * <pre>
     * Query the RLS and process the request using target returned by the
     * lookup. The target will then be cached and used for processing
     * subsequent requests for the same key. Any errors during lookup service
     * processing will return an error back to the client.  Services with
     * strict regional routing requirements should use this strategy.
     * </pre>
     *
     * <code>SYNC_LOOKUP_CLIENT_SEES_ERROR = 2;</code>
     */
    SYNC_LOOKUP_CLIENT_SEES_ERROR(2),
    /**
     * <pre>
     * Query the RLS asynchronously but respond with the default target.  The
     * target in the lookup response will then be cached and used for
     * subsequent requests.  Services with strict latency requirements (but not
     * strict regional routing requirements) should use this strategy.
     * </pre>
     *
     * <code>ASYNC_LOOKUP_DEFAULT_TARGET_ON_MISS = 3;</code>
     */
    ASYNC_LOOKUP_DEFAULT_TARGET_ON_MISS(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>STRATEGY_UNSPECIFIED = 0;</code>
     */
    public static final int STRATEGY_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Query the RLS and process the request using target returned by the
     * lookup. The target will then be cached and used for processing
     * subsequent requests for the same key. Any errors during lookup service
     * processing will fall back to default target for request processing.
     * </pre>
     *
     * <code>SYNC_LOOKUP_DEFAULT_TARGET_ON_ERROR = 1;</code>
     */
    public static final int SYNC_LOOKUP_DEFAULT_TARGET_ON_ERROR_VALUE = 1;
    /**
     * <pre>
     * Query the RLS and process the request using target returned by the
     * lookup. The target will then be cached and used for processing
     * subsequent requests for the same key. Any errors during lookup service
     * processing will return an error back to the client.  Services with
     * strict regional routing requirements should use this strategy.
     * </pre>
     *
     * <code>SYNC_LOOKUP_CLIENT_SEES_ERROR = 2;</code>
     */
    public static final int SYNC_LOOKUP_CLIENT_SEES_ERROR_VALUE = 2;
    /**
     * <pre>
     * Query the RLS asynchronously but respond with the default target.  The
     * target in the lookup response will then be cached and used for
     * subsequent requests.  Services with strict latency requirements (but not
     * strict regional routing requirements) should use this strategy.
     * </pre>
     *
     * <code>ASYNC_LOOKUP_DEFAULT_TARGET_ON_MISS = 3;</code>
     */
    public static final int ASYNC_LOOKUP_DEFAULT_TARGET_ON_MISS_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static RequestProcessingStrategy valueOf(int value) {
      return forNumber(value);
    }

    public static RequestProcessingStrategy forNumber(int value) {
      switch (value) {
        case 0: return STRATEGY_UNSPECIFIED;
        case 1: return SYNC_LOOKUP_DEFAULT_TARGET_ON_ERROR;
        case 2: return SYNC_LOOKUP_CLIENT_SEES_ERROR;
        case 3: return ASYNC_LOOKUP_DEFAULT_TARGET_ON_MISS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RequestProcessingStrategy>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RequestProcessingStrategy> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RequestProcessingStrategy>() {
            public RequestProcessingStrategy findValueByNumber(int number) {
              return RequestProcessingStrategy.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return RouteLookupConfig.getDescriptor().getEnumTypes().get(0);
    }

    private static final RequestProcessingStrategy[] VALUES = values();

    public static RequestProcessingStrategy valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RequestProcessingStrategy(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:grpc.lookup.v1.RouteLookupConfig.RequestProcessingStrategy)
  }

  private int bitField0_;
  public static final int HTTP_KEYBUILDERS_FIELD_NUMBER = 1;
  private java.util.List<HttpKeyBuilder> httpKeybuilders_;
  /**
   * <pre>
   * Ordered specifications for constructing keys for HTTP requests.  Last
   * match wins.  If no HttpKeyBuilder matches, an empty key_map will be sent to
   * the lookup service; it should likely reply with a global default route
   * and raise an alert.
   * </pre>
   *
   * <code>repeated .grpc.lookup.v1.HttpKeyBuilder http_keybuilders = 1;</code>
   */
  public java.util.List<HttpKeyBuilder> getHttpKeybuildersList() {
    return httpKeybuilders_;
  }
  /**
   * <pre>
   * Ordered specifications for constructing keys for HTTP requests.  Last
   * match wins.  If no HttpKeyBuilder matches, an empty key_map will be sent to
   * the lookup service; it should likely reply with a global default route
   * and raise an alert.
   * </pre>
   *
   * <code>repeated .grpc.lookup.v1.HttpKeyBuilder http_keybuilders = 1;</code>
   */
  public java.util.List<? extends HttpKeyBuilderOrBuilder>
      getHttpKeybuildersOrBuilderList() {
    return httpKeybuilders_;
  }
  /**
   * <pre>
   * Ordered specifications for constructing keys for HTTP requests.  Last
   * match wins.  If no HttpKeyBuilder matches, an empty key_map will be sent to
   * the lookup service; it should likely reply with a global default route
   * and raise an alert.
   * </pre>
   *
   * <code>repeated .grpc.lookup.v1.HttpKeyBuilder http_keybuilders = 1;</code>
   */
  public int getHttpKeybuildersCount() {
    return httpKeybuilders_.size();
  }
  /**
   * <pre>
   * Ordered specifications for constructing keys for HTTP requests.  Last
   * match wins.  If no HttpKeyBuilder matches, an empty key_map will be sent to
   * the lookup service; it should likely reply with a global default route
   * and raise an alert.
   * </pre>
   *
   * <code>repeated .grpc.lookup.v1.HttpKeyBuilder http_keybuilders = 1;</code>
   */
  public HttpKeyBuilder getHttpKeybuilders(int index) {
    return httpKeybuilders_.get(index);
  }
  /**
   * <pre>
   * Ordered specifications for constructing keys for HTTP requests.  Last
   * match wins.  If no HttpKeyBuilder matches, an empty key_map will be sent to
   * the lookup service; it should likely reply with a global default route
   * and raise an alert.
   * </pre>
   *
   * <code>repeated .grpc.lookup.v1.HttpKeyBuilder http_keybuilders = 1;</code>
   */
  public HttpKeyBuilderOrBuilder getHttpKeybuildersOrBuilder(
      int index) {
    return httpKeybuilders_.get(index);
  }

  public static final int GRPC_KEYBUILDERS_FIELD_NUMBER = 2;
  private java.util.List<GrpcKeyBuilder> grpcKeybuilders_;
  /**
   * <pre>
   * Unordered specifications for constructing keys for gRPC requests.  All
   * GrpcKeyBuilders on this list must have unique "name" fields so that the
   * client is free to prebuild a hash map keyed by name.  If no GrpcKeyBuilder
   * matches, an empty key_map will be sent to the lookup service; it should
   * likely reply with a global default route and raise an alert.
   * </pre>
   *
   * <code>repeated .grpc.lookup.v1.GrpcKeyBuilder grpc_keybuilders = 2;</code>
   */
  public java.util.List<GrpcKeyBuilder> getGrpcKeybuildersList() {
    return grpcKeybuilders_;
  }
  /**
   * <pre>
   * Unordered specifications for constructing keys for gRPC requests.  All
   * GrpcKeyBuilders on this list must have unique "name" fields so that the
   * client is free to prebuild a hash map keyed by name.  If no GrpcKeyBuilder
   * matches, an empty key_map will be sent to the lookup service; it should
   * likely reply with a global default route and raise an alert.
   * </pre>
   *
   * <code>repeated .grpc.lookup.v1.GrpcKeyBuilder grpc_keybuilders = 2;</code>
   */
  public java.util.List<? extends GrpcKeyBuilderOrBuilder>
      getGrpcKeybuildersOrBuilderList() {
    return grpcKeybuilders_;
  }
  /**
   * <pre>
   * Unordered specifications for constructing keys for gRPC requests.  All
   * GrpcKeyBuilders on this list must have unique "name" fields so that the
   * client is free to prebuild a hash map keyed by name.  If no GrpcKeyBuilder
   * matches, an empty key_map will be sent to the lookup service; it should
   * likely reply with a global default route and raise an alert.
   * </pre>
   *
   * <code>repeated .grpc.lookup.v1.GrpcKeyBuilder grpc_keybuilders = 2;</code>
   */
  public int getGrpcKeybuildersCount() {
    return grpcKeybuilders_.size();
  }
  /**
   * <pre>
   * Unordered specifications for constructing keys for gRPC requests.  All
   * GrpcKeyBuilders on this list must have unique "name" fields so that the
   * client is free to prebuild a hash map keyed by name.  If no GrpcKeyBuilder
   * matches, an empty key_map will be sent to the lookup service; it should
   * likely reply with a global default route and raise an alert.
   * </pre>
   *
   * <code>repeated .grpc.lookup.v1.GrpcKeyBuilder grpc_keybuilders = 2;</code>
   */
  public GrpcKeyBuilder getGrpcKeybuilders(int index) {
    return grpcKeybuilders_.get(index);
  }
  /**
   * <pre>
   * Unordered specifications for constructing keys for gRPC requests.  All
   * GrpcKeyBuilders on this list must have unique "name" fields so that the
   * client is free to prebuild a hash map keyed by name.  If no GrpcKeyBuilder
   * matches, an empty key_map will be sent to the lookup service; it should
   * likely reply with a global default route and raise an alert.
   * </pre>
   *
   * <code>repeated .grpc.lookup.v1.GrpcKeyBuilder grpc_keybuilders = 2;</code>
   */
  public GrpcKeyBuilderOrBuilder getGrpcKeybuildersOrBuilder(
      int index) {
    return grpcKeybuilders_.get(index);
  }

  public static final int LOOKUP_SERVICE_FIELD_NUMBER = 3;
  private volatile Object lookupService_;
  /**
   * <pre>
   * The name of the lookup service as a gRPC URI.  Typically, this will be
   * a subdomain of the target, such as "lookup.datastore.googleapis.com".
   * </pre>
   *
   * <code>string lookup_service = 3;</code>
   */
  public String getLookupService() {
    Object ref = lookupService_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      lookupService_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of the lookup service as a gRPC URI.  Typically, this will be
   * a subdomain of the target, such as "lookup.datastore.googleapis.com".
   * </pre>
   *
   * <code>string lookup_service = 3;</code>
   */
  public com.google.protobuf.ByteString
      getLookupServiceBytes() {
    Object ref = lookupService_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      lookupService_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LOOKUP_SERVICE_TIMEOUT_FIELD_NUMBER = 4;
  private com.google.protobuf.Duration lookupServiceTimeout_;
  /**
   * <pre>
   * Configure a timeout value for lookup service requests.
   * Defaults to 10 seconds if not specified.
   * </pre>
   *
   * <code>.google.protobuf.Duration lookup_service_timeout = 4;</code>
   */
  public boolean hasLookupServiceTimeout() {
    return lookupServiceTimeout_ != null;
  }
  /**
   * <pre>
   * Configure a timeout value for lookup service requests.
   * Defaults to 10 seconds if not specified.
   * </pre>
   *
   * <code>.google.protobuf.Duration lookup_service_timeout = 4;</code>
   */
  public com.google.protobuf.Duration getLookupServiceTimeout() {
    return lookupServiceTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : lookupServiceTimeout_;
  }
  /**
   * <pre>
   * Configure a timeout value for lookup service requests.
   * Defaults to 10 seconds if not specified.
   * </pre>
   *
   * <code>.google.protobuf.Duration lookup_service_timeout = 4;</code>
   */
  public com.google.protobuf.DurationOrBuilder getLookupServiceTimeoutOrBuilder() {
    return getLookupServiceTimeout();
  }

  public static final int MAX_AGE_FIELD_NUMBER = 5;
  private com.google.protobuf.Duration maxAge_;
  /**
   * <pre>
   * How long are responses valid for (like HTTP Cache-Control).
   * If omitted or zero, the longest valid cache time is used.
   * This value is clamped to 5 minutes to avoid unflushable bad responses.
   * </pre>
   *
   * <code>.google.protobuf.Duration max_age = 5;</code>
   */
  public boolean hasMaxAge() {
    return maxAge_ != null;
  }
  /**
   * <pre>
   * How long are responses valid for (like HTTP Cache-Control).
   * If omitted or zero, the longest valid cache time is used.
   * This value is clamped to 5 minutes to avoid unflushable bad responses.
   * </pre>
   *
   * <code>.google.protobuf.Duration max_age = 5;</code>
   */
  public com.google.protobuf.Duration getMaxAge() {
    return maxAge_ == null ? com.google.protobuf.Duration.getDefaultInstance() : maxAge_;
  }
  /**
   * <pre>
   * How long are responses valid for (like HTTP Cache-Control).
   * If omitted or zero, the longest valid cache time is used.
   * This value is clamped to 5 minutes to avoid unflushable bad responses.
   * </pre>
   *
   * <code>.google.protobuf.Duration max_age = 5;</code>
   */
  public com.google.protobuf.DurationOrBuilder getMaxAgeOrBuilder() {
    return getMaxAge();
  }

  public static final int STALE_AGE_FIELD_NUMBER = 6;
  private com.google.protobuf.Duration staleAge_;
  /**
   * <pre>
   * After a response has been in the client cache for this amount of time
   * and is re-requested, start an asynchronous RPC to re-validate it.
   * This value should be less than max_age by at least the length of a
   * typical RTT to the Route Lookup Service to fully mask the RTT latency.
   * If omitted, keys are only re-requested after they have expired.
   * </pre>
   *
   * <code>.google.protobuf.Duration stale_age = 6;</code>
   */
  public boolean hasStaleAge() {
    return staleAge_ != null;
  }
  /**
   * <pre>
   * After a response has been in the client cache for this amount of time
   * and is re-requested, start an asynchronous RPC to re-validate it.
   * This value should be less than max_age by at least the length of a
   * typical RTT to the Route Lookup Service to fully mask the RTT latency.
   * If omitted, keys are only re-requested after they have expired.
   * </pre>
   *
   * <code>.google.protobuf.Duration stale_age = 6;</code>
   */
  public com.google.protobuf.Duration getStaleAge() {
    return staleAge_ == null ? com.google.protobuf.Duration.getDefaultInstance() : staleAge_;
  }
  /**
   * <pre>
   * After a response has been in the client cache for this amount of time
   * and is re-requested, start an asynchronous RPC to re-validate it.
   * This value should be less than max_age by at least the length of a
   * typical RTT to the Route Lookup Service to fully mask the RTT latency.
   * If omitted, keys are only re-requested after they have expired.
   * </pre>
   *
   * <code>.google.protobuf.Duration stale_age = 6;</code>
   */
  public com.google.protobuf.DurationOrBuilder getStaleAgeOrBuilder() {
    return getStaleAge();
  }

  public static final int CACHE_SIZE_BYTES_FIELD_NUMBER = 7;
  private long cacheSizeBytes_;
  /**
   * <pre>
   * Rough indicator of amount of memory to use for the client cache.  Some of
   * the data structure overhead is not accounted for, so actual memory consumed
   * will be somewhat greater than this value.  If this field is omitted or set
   * to zero, a client default will be used.  The value may be capped to a lower
   * amount based on client configuration.
   * </pre>
   *
   * <code>int64 cache_size_bytes = 7;</code>
   */
  public long getCacheSizeBytes() {
    return cacheSizeBytes_;
  }

  public static final int VALID_TARGETS_FIELD_NUMBER = 8;
  private com.google.protobuf.LazyStringList validTargets_;
  /**
   * <pre>
   * This is a list of all the possible targets that can be returned by the
   * lookup service.  If a target not on this list is returned, it will be
   * treated the same as an RPC error from the RLS.
   * </pre>
   *
   * <code>repeated string valid_targets = 8;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getValidTargetsList() {
    return validTargets_;
  }
  /**
   * <pre>
   * This is a list of all the possible targets that can be returned by the
   * lookup service.  If a target not on this list is returned, it will be
   * treated the same as an RPC error from the RLS.
   * </pre>
   *
   * <code>repeated string valid_targets = 8;</code>
   */
  public int getValidTargetsCount() {
    return validTargets_.size();
  }
  /**
   * <pre>
   * This is a list of all the possible targets that can be returned by the
   * lookup service.  If a target not on this list is returned, it will be
   * treated the same as an RPC error from the RLS.
   * </pre>
   *
   * <code>repeated string valid_targets = 8;</code>
   */
  public String getValidTargets(int index) {
    return validTargets_.get(index);
  }
  /**
   * <pre>
   * This is a list of all the possible targets that can be returned by the
   * lookup service.  If a target not on this list is returned, it will be
   * treated the same as an RPC error from the RLS.
   * </pre>
   *
   * <code>repeated string valid_targets = 8;</code>
   */
  public com.google.protobuf.ByteString
      getValidTargetsBytes(int index) {
    return validTargets_.getByteString(index);
  }

  public static final int DEFAULT_TARGET_FIELD_NUMBER = 9;
  private volatile Object defaultTarget_;
  /**
   * <pre>
   * This value provides a default target to use if needed.  It will be used for
   * request processing strategy SYNC_LOOKUP_DEFAULT_TARGET_ON_ERROR if RLS
   * returns an error, or strategy ASYNC_LOOKUP_DEFAULT_TARGET_ON_MISS if RLS
   * returns an error or there is a cache miss in the client.  It will also be
   * used if there are no healthy backends for an RLS target.  Note that
   * requests can be routed only to a subdomain of the original target,
   * e.g. "us_east_1.cloudbigtable.googleapis.com".
   * </pre>
   *
   * <code>string default_target = 9;</code>
   */
  public String getDefaultTarget() {
    Object ref = defaultTarget_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      defaultTarget_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * This value provides a default target to use if needed.  It will be used for
   * request processing strategy SYNC_LOOKUP_DEFAULT_TARGET_ON_ERROR if RLS
   * returns an error, or strategy ASYNC_LOOKUP_DEFAULT_TARGET_ON_MISS if RLS
   * returns an error or there is a cache miss in the client.  It will also be
   * used if there are no healthy backends for an RLS target.  Note that
   * requests can be routed only to a subdomain of the original target,
   * e.g. "us_east_1.cloudbigtable.googleapis.com".
   * </pre>
   *
   * <code>string default_target = 9;</code>
   */
  public com.google.protobuf.ByteString
      getDefaultTargetBytes() {
    Object ref = defaultTarget_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      defaultTarget_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REQUEST_PROCESSING_STRATEGY_FIELD_NUMBER = 10;
  private int requestProcessingStrategy_;
  /**
   * <code>.grpc.lookup.v1.RouteLookupConfig.RequestProcessingStrategy request_processing_strategy = 10;</code>
   */
  public int getRequestProcessingStrategyValue() {
    return requestProcessingStrategy_;
  }
  /**
   * <code>.grpc.lookup.v1.RouteLookupConfig.RequestProcessingStrategy request_processing_strategy = 10;</code>
   */
  public RequestProcessingStrategy getRequestProcessingStrategy() {
    RequestProcessingStrategy result = RequestProcessingStrategy.valueOf(requestProcessingStrategy_);
    return result == null ? RequestProcessingStrategy.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < httpKeybuilders_.size(); i++) {
      output.writeMessage(1, httpKeybuilders_.get(i));
    }
    for (int i = 0; i < grpcKeybuilders_.size(); i++) {
      output.writeMessage(2, grpcKeybuilders_.get(i));
    }
    if (!getLookupServiceBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, lookupService_);
    }
    if (lookupServiceTimeout_ != null) {
      output.writeMessage(4, getLookupServiceTimeout());
    }
    if (maxAge_ != null) {
      output.writeMessage(5, getMaxAge());
    }
    if (staleAge_ != null) {
      output.writeMessage(6, getStaleAge());
    }
    if (cacheSizeBytes_ != 0L) {
      output.writeInt64(7, cacheSizeBytes_);
    }
    for (int i = 0; i < validTargets_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, validTargets_.getRaw(i));
    }
    if (!getDefaultTargetBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, defaultTarget_);
    }
    if (requestProcessingStrategy_ != RequestProcessingStrategy.STRATEGY_UNSPECIFIED.getNumber()) {
      output.writeEnum(10, requestProcessingStrategy_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < httpKeybuilders_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, httpKeybuilders_.get(i));
    }
    for (int i = 0; i < grpcKeybuilders_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, grpcKeybuilders_.get(i));
    }
    if (!getLookupServiceBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, lookupService_);
    }
    if (lookupServiceTimeout_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getLookupServiceTimeout());
    }
    if (maxAge_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getMaxAge());
    }
    if (staleAge_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getStaleAge());
    }
    if (cacheSizeBytes_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(7, cacheSizeBytes_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < validTargets_.size(); i++) {
        dataSize += computeStringSizeNoTag(validTargets_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getValidTargetsList().size();
    }
    if (!getDefaultTargetBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, defaultTarget_);
    }
    if (requestProcessingStrategy_ != RequestProcessingStrategy.STRATEGY_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(10, requestProcessingStrategy_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof RouteLookupConfig)) {
      return super.equals(obj);
    }
    RouteLookupConfig other = (RouteLookupConfig) obj;

    boolean result = true;
    result = result && getHttpKeybuildersList()
        .equals(other.getHttpKeybuildersList());
    result = result && getGrpcKeybuildersList()
        .equals(other.getGrpcKeybuildersList());
    result = result && getLookupService()
        .equals(other.getLookupService());
    result = result && (hasLookupServiceTimeout() == other.hasLookupServiceTimeout());
    if (hasLookupServiceTimeout()) {
      result = result && getLookupServiceTimeout()
          .equals(other.getLookupServiceTimeout());
    }
    result = result && (hasMaxAge() == other.hasMaxAge());
    if (hasMaxAge()) {
      result = result && getMaxAge()
          .equals(other.getMaxAge());
    }
    result = result && (hasStaleAge() == other.hasStaleAge());
    if (hasStaleAge()) {
      result = result && getStaleAge()
          .equals(other.getStaleAge());
    }
    result = result && (getCacheSizeBytes()
        == other.getCacheSizeBytes());
    result = result && getValidTargetsList()
        .equals(other.getValidTargetsList());
    result = result && getDefaultTarget()
        .equals(other.getDefaultTarget());
    result = result && requestProcessingStrategy_ == other.requestProcessingStrategy_;
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getHttpKeybuildersCount() > 0) {
      hash = (37 * hash) + HTTP_KEYBUILDERS_FIELD_NUMBER;
      hash = (53 * hash) + getHttpKeybuildersList().hashCode();
    }
    if (getGrpcKeybuildersCount() > 0) {
      hash = (37 * hash) + GRPC_KEYBUILDERS_FIELD_NUMBER;
      hash = (53 * hash) + getGrpcKeybuildersList().hashCode();
    }
    hash = (37 * hash) + LOOKUP_SERVICE_FIELD_NUMBER;
    hash = (53 * hash) + getLookupService().hashCode();
    if (hasLookupServiceTimeout()) {
      hash = (37 * hash) + LOOKUP_SERVICE_TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + getLookupServiceTimeout().hashCode();
    }
    if (hasMaxAge()) {
      hash = (37 * hash) + MAX_AGE_FIELD_NUMBER;
      hash = (53 * hash) + getMaxAge().hashCode();
    }
    if (hasStaleAge()) {
      hash = (37 * hash) + STALE_AGE_FIELD_NUMBER;
      hash = (53 * hash) + getStaleAge().hashCode();
    }
    hash = (37 * hash) + CACHE_SIZE_BYTES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getCacheSizeBytes());
    if (getValidTargetsCount() > 0) {
      hash = (37 * hash) + VALID_TARGETS_FIELD_NUMBER;
      hash = (53 * hash) + getValidTargetsList().hashCode();
    }
    hash = (37 * hash) + DEFAULT_TARGET_FIELD_NUMBER;
    hash = (53 * hash) + getDefaultTarget().hashCode();
    hash = (37 * hash) + REQUEST_PROCESSING_STRATEGY_FIELD_NUMBER;
    hash = (53 * hash) + requestProcessingStrategy_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static RouteLookupConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static RouteLookupConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static RouteLookupConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static RouteLookupConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static RouteLookupConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static RouteLookupConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static RouteLookupConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static RouteLookupConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static RouteLookupConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static RouteLookupConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static RouteLookupConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static RouteLookupConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(RouteLookupConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code grpc.lookup.v1.RouteLookupConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:grpc.lookup.v1.RouteLookupConfig)
      RouteLookupConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RlsConfigProto.internal_static_grpc_lookup_v1_RouteLookupConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RlsConfigProto.internal_static_grpc_lookup_v1_RouteLookupConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RouteLookupConfig.class, Builder.class);
    }

    // Construct using io.grpc.lookup.v1.RouteLookupConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getHttpKeybuildersFieldBuilder();
        getGrpcKeybuildersFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (httpKeybuildersBuilder_ == null) {
        httpKeybuilders_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        httpKeybuildersBuilder_.clear();
      }
      if (grpcKeybuildersBuilder_ == null) {
        grpcKeybuilders_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        grpcKeybuildersBuilder_.clear();
      }
      lookupService_ = "";

      if (lookupServiceTimeoutBuilder_ == null) {
        lookupServiceTimeout_ = null;
      } else {
        lookupServiceTimeout_ = null;
        lookupServiceTimeoutBuilder_ = null;
      }
      if (maxAgeBuilder_ == null) {
        maxAge_ = null;
      } else {
        maxAge_ = null;
        maxAgeBuilder_ = null;
      }
      if (staleAgeBuilder_ == null) {
        staleAge_ = null;
      } else {
        staleAge_ = null;
        staleAgeBuilder_ = null;
      }
      cacheSizeBytes_ = 0L;

      validTargets_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000080);
      defaultTarget_ = "";

      requestProcessingStrategy_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return RlsConfigProto.internal_static_grpc_lookup_v1_RouteLookupConfig_descriptor;
    }

    public RouteLookupConfig getDefaultInstanceForType() {
      return RouteLookupConfig.getDefaultInstance();
    }

    public RouteLookupConfig build() {
      RouteLookupConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public RouteLookupConfig buildPartial() {
      RouteLookupConfig result = new RouteLookupConfig(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (httpKeybuildersBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          httpKeybuilders_ = java.util.Collections.unmodifiableList(httpKeybuilders_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.httpKeybuilders_ = httpKeybuilders_;
      } else {
        result.httpKeybuilders_ = httpKeybuildersBuilder_.build();
      }
      if (grpcKeybuildersBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          grpcKeybuilders_ = java.util.Collections.unmodifiableList(grpcKeybuilders_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.grpcKeybuilders_ = grpcKeybuilders_;
      } else {
        result.grpcKeybuilders_ = grpcKeybuildersBuilder_.build();
      }
      result.lookupService_ = lookupService_;
      if (lookupServiceTimeoutBuilder_ == null) {
        result.lookupServiceTimeout_ = lookupServiceTimeout_;
      } else {
        result.lookupServiceTimeout_ = lookupServiceTimeoutBuilder_.build();
      }
      if (maxAgeBuilder_ == null) {
        result.maxAge_ = maxAge_;
      } else {
        result.maxAge_ = maxAgeBuilder_.build();
      }
      if (staleAgeBuilder_ == null) {
        result.staleAge_ = staleAge_;
      } else {
        result.staleAge_ = staleAgeBuilder_.build();
      }
      result.cacheSizeBytes_ = cacheSizeBytes_;
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        validTargets_ = validTargets_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000080);
      }
      result.validTargets_ = validTargets_;
      result.defaultTarget_ = defaultTarget_;
      result.requestProcessingStrategy_ = requestProcessingStrategy_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof RouteLookupConfig) {
        return mergeFrom((RouteLookupConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(RouteLookupConfig other) {
      if (other == RouteLookupConfig.getDefaultInstance()) return this;
      if (httpKeybuildersBuilder_ == null) {
        if (!other.httpKeybuilders_.isEmpty()) {
          if (httpKeybuilders_.isEmpty()) {
            httpKeybuilders_ = other.httpKeybuilders_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureHttpKeybuildersIsMutable();
            httpKeybuilders_.addAll(other.httpKeybuilders_);
          }
          onChanged();
        }
      } else {
        if (!other.httpKeybuilders_.isEmpty()) {
          if (httpKeybuildersBuilder_.isEmpty()) {
            httpKeybuildersBuilder_.dispose();
            httpKeybuildersBuilder_ = null;
            httpKeybuilders_ = other.httpKeybuilders_;
            bitField0_ = (bitField0_ & ~0x00000001);
            httpKeybuildersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getHttpKeybuildersFieldBuilder() : null;
          } else {
            httpKeybuildersBuilder_.addAllMessages(other.httpKeybuilders_);
          }
        }
      }
      if (grpcKeybuildersBuilder_ == null) {
        if (!other.grpcKeybuilders_.isEmpty()) {
          if (grpcKeybuilders_.isEmpty()) {
            grpcKeybuilders_ = other.grpcKeybuilders_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureGrpcKeybuildersIsMutable();
            grpcKeybuilders_.addAll(other.grpcKeybuilders_);
          }
          onChanged();
        }
      } else {
        if (!other.grpcKeybuilders_.isEmpty()) {
          if (grpcKeybuildersBuilder_.isEmpty()) {
            grpcKeybuildersBuilder_.dispose();
            grpcKeybuildersBuilder_ = null;
            grpcKeybuilders_ = other.grpcKeybuilders_;
            bitField0_ = (bitField0_ & ~0x00000002);
            grpcKeybuildersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getGrpcKeybuildersFieldBuilder() : null;
          } else {
            grpcKeybuildersBuilder_.addAllMessages(other.grpcKeybuilders_);
          }
        }
      }
      if (!other.getLookupService().isEmpty()) {
        lookupService_ = other.lookupService_;
        onChanged();
      }
      if (other.hasLookupServiceTimeout()) {
        mergeLookupServiceTimeout(other.getLookupServiceTimeout());
      }
      if (other.hasMaxAge()) {
        mergeMaxAge(other.getMaxAge());
      }
      if (other.hasStaleAge()) {
        mergeStaleAge(other.getStaleAge());
      }
      if (other.getCacheSizeBytes() != 0L) {
        setCacheSizeBytes(other.getCacheSizeBytes());
      }
      if (!other.validTargets_.isEmpty()) {
        if (validTargets_.isEmpty()) {
          validTargets_ = other.validTargets_;
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          ensureValidTargetsIsMutable();
          validTargets_.addAll(other.validTargets_);
        }
        onChanged();
      }
      if (!other.getDefaultTarget().isEmpty()) {
        defaultTarget_ = other.defaultTarget_;
        onChanged();
      }
      if (other.requestProcessingStrategy_ != 0) {
        setRequestProcessingStrategyValue(other.getRequestProcessingStrategyValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      RouteLookupConfig parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (RouteLookupConfig) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<HttpKeyBuilder> httpKeybuilders_ =
      java.util.Collections.emptyList();
    private void ensureHttpKeybuildersIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        httpKeybuilders_ = new java.util.ArrayList<HttpKeyBuilder>(httpKeybuilders_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        HttpKeyBuilder, HttpKeyBuilder.Builder, HttpKeyBuilderOrBuilder> httpKeybuildersBuilder_;

    /**
     * <pre>
     * Ordered specifications for constructing keys for HTTP requests.  Last
     * match wins.  If no HttpKeyBuilder matches, an empty key_map will be sent to
     * the lookup service; it should likely reply with a global default route
     * and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.HttpKeyBuilder http_keybuilders = 1;</code>
     */
    public java.util.List<HttpKeyBuilder> getHttpKeybuildersList() {
      if (httpKeybuildersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(httpKeybuilders_);
      } else {
        return httpKeybuildersBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Ordered specifications for constructing keys for HTTP requests.  Last
     * match wins.  If no HttpKeyBuilder matches, an empty key_map will be sent to
     * the lookup service; it should likely reply with a global default route
     * and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.HttpKeyBuilder http_keybuilders = 1;</code>
     */
    public int getHttpKeybuildersCount() {
      if (httpKeybuildersBuilder_ == null) {
        return httpKeybuilders_.size();
      } else {
        return httpKeybuildersBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Ordered specifications for constructing keys for HTTP requests.  Last
     * match wins.  If no HttpKeyBuilder matches, an empty key_map will be sent to
     * the lookup service; it should likely reply with a global default route
     * and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.HttpKeyBuilder http_keybuilders = 1;</code>
     */
    public HttpKeyBuilder getHttpKeybuilders(int index) {
      if (httpKeybuildersBuilder_ == null) {
        return httpKeybuilders_.get(index);
      } else {
        return httpKeybuildersBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Ordered specifications for constructing keys for HTTP requests.  Last
     * match wins.  If no HttpKeyBuilder matches, an empty key_map will be sent to
     * the lookup service; it should likely reply with a global default route
     * and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.HttpKeyBuilder http_keybuilders = 1;</code>
     */
    public Builder setHttpKeybuilders(
        int index, HttpKeyBuilder value) {
      if (httpKeybuildersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHttpKeybuildersIsMutable();
        httpKeybuilders_.set(index, value);
        onChanged();
      } else {
        httpKeybuildersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Ordered specifications for constructing keys for HTTP requests.  Last
     * match wins.  If no HttpKeyBuilder matches, an empty key_map will be sent to
     * the lookup service; it should likely reply with a global default route
     * and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.HttpKeyBuilder http_keybuilders = 1;</code>
     */
    public Builder setHttpKeybuilders(
        int index, HttpKeyBuilder.Builder builderForValue) {
      if (httpKeybuildersBuilder_ == null) {
        ensureHttpKeybuildersIsMutable();
        httpKeybuilders_.set(index, builderForValue.build());
        onChanged();
      } else {
        httpKeybuildersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Ordered specifications for constructing keys for HTTP requests.  Last
     * match wins.  If no HttpKeyBuilder matches, an empty key_map will be sent to
     * the lookup service; it should likely reply with a global default route
     * and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.HttpKeyBuilder http_keybuilders = 1;</code>
     */
    public Builder addHttpKeybuilders(HttpKeyBuilder value) {
      if (httpKeybuildersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHttpKeybuildersIsMutable();
        httpKeybuilders_.add(value);
        onChanged();
      } else {
        httpKeybuildersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Ordered specifications for constructing keys for HTTP requests.  Last
     * match wins.  If no HttpKeyBuilder matches, an empty key_map will be sent to
     * the lookup service; it should likely reply with a global default route
     * and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.HttpKeyBuilder http_keybuilders = 1;</code>
     */
    public Builder addHttpKeybuilders(
        int index, HttpKeyBuilder value) {
      if (httpKeybuildersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHttpKeybuildersIsMutable();
        httpKeybuilders_.add(index, value);
        onChanged();
      } else {
        httpKeybuildersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Ordered specifications for constructing keys for HTTP requests.  Last
     * match wins.  If no HttpKeyBuilder matches, an empty key_map will be sent to
     * the lookup service; it should likely reply with a global default route
     * and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.HttpKeyBuilder http_keybuilders = 1;</code>
     */
    public Builder addHttpKeybuilders(
        HttpKeyBuilder.Builder builderForValue) {
      if (httpKeybuildersBuilder_ == null) {
        ensureHttpKeybuildersIsMutable();
        httpKeybuilders_.add(builderForValue.build());
        onChanged();
      } else {
        httpKeybuildersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Ordered specifications for constructing keys for HTTP requests.  Last
     * match wins.  If no HttpKeyBuilder matches, an empty key_map will be sent to
     * the lookup service; it should likely reply with a global default route
     * and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.HttpKeyBuilder http_keybuilders = 1;</code>
     */
    public Builder addHttpKeybuilders(
        int index, HttpKeyBuilder.Builder builderForValue) {
      if (httpKeybuildersBuilder_ == null) {
        ensureHttpKeybuildersIsMutable();
        httpKeybuilders_.add(index, builderForValue.build());
        onChanged();
      } else {
        httpKeybuildersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Ordered specifications for constructing keys for HTTP requests.  Last
     * match wins.  If no HttpKeyBuilder matches, an empty key_map will be sent to
     * the lookup service; it should likely reply with a global default route
     * and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.HttpKeyBuilder http_keybuilders = 1;</code>
     */
    public Builder addAllHttpKeybuilders(
        Iterable<? extends HttpKeyBuilder> values) {
      if (httpKeybuildersBuilder_ == null) {
        ensureHttpKeybuildersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, httpKeybuilders_);
        onChanged();
      } else {
        httpKeybuildersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Ordered specifications for constructing keys for HTTP requests.  Last
     * match wins.  If no HttpKeyBuilder matches, an empty key_map will be sent to
     * the lookup service; it should likely reply with a global default route
     * and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.HttpKeyBuilder http_keybuilders = 1;</code>
     */
    public Builder clearHttpKeybuilders() {
      if (httpKeybuildersBuilder_ == null) {
        httpKeybuilders_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        httpKeybuildersBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Ordered specifications for constructing keys for HTTP requests.  Last
     * match wins.  If no HttpKeyBuilder matches, an empty key_map will be sent to
     * the lookup service; it should likely reply with a global default route
     * and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.HttpKeyBuilder http_keybuilders = 1;</code>
     */
    public Builder removeHttpKeybuilders(int index) {
      if (httpKeybuildersBuilder_ == null) {
        ensureHttpKeybuildersIsMutable();
        httpKeybuilders_.remove(index);
        onChanged();
      } else {
        httpKeybuildersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Ordered specifications for constructing keys for HTTP requests.  Last
     * match wins.  If no HttpKeyBuilder matches, an empty key_map will be sent to
     * the lookup service; it should likely reply with a global default route
     * and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.HttpKeyBuilder http_keybuilders = 1;</code>
     */
    public HttpKeyBuilder.Builder getHttpKeybuildersBuilder(
        int index) {
      return getHttpKeybuildersFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Ordered specifications for constructing keys for HTTP requests.  Last
     * match wins.  If no HttpKeyBuilder matches, an empty key_map will be sent to
     * the lookup service; it should likely reply with a global default route
     * and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.HttpKeyBuilder http_keybuilders = 1;</code>
     */
    public HttpKeyBuilderOrBuilder getHttpKeybuildersOrBuilder(
        int index) {
      if (httpKeybuildersBuilder_ == null) {
        return httpKeybuilders_.get(index);  } else {
        return httpKeybuildersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Ordered specifications for constructing keys for HTTP requests.  Last
     * match wins.  If no HttpKeyBuilder matches, an empty key_map will be sent to
     * the lookup service; it should likely reply with a global default route
     * and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.HttpKeyBuilder http_keybuilders = 1;</code>
     */
    public java.util.List<? extends HttpKeyBuilderOrBuilder>
         getHttpKeybuildersOrBuilderList() {
      if (httpKeybuildersBuilder_ != null) {
        return httpKeybuildersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(httpKeybuilders_);
      }
    }
    /**
     * <pre>
     * Ordered specifications for constructing keys for HTTP requests.  Last
     * match wins.  If no HttpKeyBuilder matches, an empty key_map will be sent to
     * the lookup service; it should likely reply with a global default route
     * and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.HttpKeyBuilder http_keybuilders = 1;</code>
     */
    public HttpKeyBuilder.Builder addHttpKeybuildersBuilder() {
      return getHttpKeybuildersFieldBuilder().addBuilder(
          HttpKeyBuilder.getDefaultInstance());
    }
    /**
     * <pre>
     * Ordered specifications for constructing keys for HTTP requests.  Last
     * match wins.  If no HttpKeyBuilder matches, an empty key_map will be sent to
     * the lookup service; it should likely reply with a global default route
     * and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.HttpKeyBuilder http_keybuilders = 1;</code>
     */
    public HttpKeyBuilder.Builder addHttpKeybuildersBuilder(
        int index) {
      return getHttpKeybuildersFieldBuilder().addBuilder(
          index, HttpKeyBuilder.getDefaultInstance());
    }
    /**
     * <pre>
     * Ordered specifications for constructing keys for HTTP requests.  Last
     * match wins.  If no HttpKeyBuilder matches, an empty key_map will be sent to
     * the lookup service; it should likely reply with a global default route
     * and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.HttpKeyBuilder http_keybuilders = 1;</code>
     */
    public java.util.List<HttpKeyBuilder.Builder>
         getHttpKeybuildersBuilderList() {
      return getHttpKeybuildersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        HttpKeyBuilder, HttpKeyBuilder.Builder, HttpKeyBuilderOrBuilder>
        getHttpKeybuildersFieldBuilder() {
      if (httpKeybuildersBuilder_ == null) {
        httpKeybuildersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            HttpKeyBuilder, HttpKeyBuilder.Builder, HttpKeyBuilderOrBuilder>(
                httpKeybuilders_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        httpKeybuilders_ = null;
      }
      return httpKeybuildersBuilder_;
    }

    private java.util.List<GrpcKeyBuilder> grpcKeybuilders_ =
      java.util.Collections.emptyList();
    private void ensureGrpcKeybuildersIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        grpcKeybuilders_ = new java.util.ArrayList<GrpcKeyBuilder>(grpcKeybuilders_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        GrpcKeyBuilder, GrpcKeyBuilder.Builder, GrpcKeyBuilderOrBuilder> grpcKeybuildersBuilder_;

    /**
     * <pre>
     * Unordered specifications for constructing keys for gRPC requests.  All
     * GrpcKeyBuilders on this list must have unique "name" fields so that the
     * client is free to prebuild a hash map keyed by name.  If no GrpcKeyBuilder
     * matches, an empty key_map will be sent to the lookup service; it should
     * likely reply with a global default route and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.GrpcKeyBuilder grpc_keybuilders = 2;</code>
     */
    public java.util.List<GrpcKeyBuilder> getGrpcKeybuildersList() {
      if (grpcKeybuildersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(grpcKeybuilders_);
      } else {
        return grpcKeybuildersBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Unordered specifications for constructing keys for gRPC requests.  All
     * GrpcKeyBuilders on this list must have unique "name" fields so that the
     * client is free to prebuild a hash map keyed by name.  If no GrpcKeyBuilder
     * matches, an empty key_map will be sent to the lookup service; it should
     * likely reply with a global default route and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.GrpcKeyBuilder grpc_keybuilders = 2;</code>
     */
    public int getGrpcKeybuildersCount() {
      if (grpcKeybuildersBuilder_ == null) {
        return grpcKeybuilders_.size();
      } else {
        return grpcKeybuildersBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Unordered specifications for constructing keys for gRPC requests.  All
     * GrpcKeyBuilders on this list must have unique "name" fields so that the
     * client is free to prebuild a hash map keyed by name.  If no GrpcKeyBuilder
     * matches, an empty key_map will be sent to the lookup service; it should
     * likely reply with a global default route and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.GrpcKeyBuilder grpc_keybuilders = 2;</code>
     */
    public GrpcKeyBuilder getGrpcKeybuilders(int index) {
      if (grpcKeybuildersBuilder_ == null) {
        return grpcKeybuilders_.get(index);
      } else {
        return grpcKeybuildersBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Unordered specifications for constructing keys for gRPC requests.  All
     * GrpcKeyBuilders on this list must have unique "name" fields so that the
     * client is free to prebuild a hash map keyed by name.  If no GrpcKeyBuilder
     * matches, an empty key_map will be sent to the lookup service; it should
     * likely reply with a global default route and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.GrpcKeyBuilder grpc_keybuilders = 2;</code>
     */
    public Builder setGrpcKeybuilders(
        int index, GrpcKeyBuilder value) {
      if (grpcKeybuildersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGrpcKeybuildersIsMutable();
        grpcKeybuilders_.set(index, value);
        onChanged();
      } else {
        grpcKeybuildersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Unordered specifications for constructing keys for gRPC requests.  All
     * GrpcKeyBuilders on this list must have unique "name" fields so that the
     * client is free to prebuild a hash map keyed by name.  If no GrpcKeyBuilder
     * matches, an empty key_map will be sent to the lookup service; it should
     * likely reply with a global default route and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.GrpcKeyBuilder grpc_keybuilders = 2;</code>
     */
    public Builder setGrpcKeybuilders(
        int index, GrpcKeyBuilder.Builder builderForValue) {
      if (grpcKeybuildersBuilder_ == null) {
        ensureGrpcKeybuildersIsMutable();
        grpcKeybuilders_.set(index, builderForValue.build());
        onChanged();
      } else {
        grpcKeybuildersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Unordered specifications for constructing keys for gRPC requests.  All
     * GrpcKeyBuilders on this list must have unique "name" fields so that the
     * client is free to prebuild a hash map keyed by name.  If no GrpcKeyBuilder
     * matches, an empty key_map will be sent to the lookup service; it should
     * likely reply with a global default route and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.GrpcKeyBuilder grpc_keybuilders = 2;</code>
     */
    public Builder addGrpcKeybuilders(GrpcKeyBuilder value) {
      if (grpcKeybuildersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGrpcKeybuildersIsMutable();
        grpcKeybuilders_.add(value);
        onChanged();
      } else {
        grpcKeybuildersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Unordered specifications for constructing keys for gRPC requests.  All
     * GrpcKeyBuilders on this list must have unique "name" fields so that the
     * client is free to prebuild a hash map keyed by name.  If no GrpcKeyBuilder
     * matches, an empty key_map will be sent to the lookup service; it should
     * likely reply with a global default route and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.GrpcKeyBuilder grpc_keybuilders = 2;</code>
     */
    public Builder addGrpcKeybuilders(
        int index, GrpcKeyBuilder value) {
      if (grpcKeybuildersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGrpcKeybuildersIsMutable();
        grpcKeybuilders_.add(index, value);
        onChanged();
      } else {
        grpcKeybuildersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Unordered specifications for constructing keys for gRPC requests.  All
     * GrpcKeyBuilders on this list must have unique "name" fields so that the
     * client is free to prebuild a hash map keyed by name.  If no GrpcKeyBuilder
     * matches, an empty key_map will be sent to the lookup service; it should
     * likely reply with a global default route and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.GrpcKeyBuilder grpc_keybuilders = 2;</code>
     */
    public Builder addGrpcKeybuilders(
        GrpcKeyBuilder.Builder builderForValue) {
      if (grpcKeybuildersBuilder_ == null) {
        ensureGrpcKeybuildersIsMutable();
        grpcKeybuilders_.add(builderForValue.build());
        onChanged();
      } else {
        grpcKeybuildersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Unordered specifications for constructing keys for gRPC requests.  All
     * GrpcKeyBuilders on this list must have unique "name" fields so that the
     * client is free to prebuild a hash map keyed by name.  If no GrpcKeyBuilder
     * matches, an empty key_map will be sent to the lookup service; it should
     * likely reply with a global default route and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.GrpcKeyBuilder grpc_keybuilders = 2;</code>
     */
    public Builder addGrpcKeybuilders(
        int index, GrpcKeyBuilder.Builder builderForValue) {
      if (grpcKeybuildersBuilder_ == null) {
        ensureGrpcKeybuildersIsMutable();
        grpcKeybuilders_.add(index, builderForValue.build());
        onChanged();
      } else {
        grpcKeybuildersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Unordered specifications for constructing keys for gRPC requests.  All
     * GrpcKeyBuilders on this list must have unique "name" fields so that the
     * client is free to prebuild a hash map keyed by name.  If no GrpcKeyBuilder
     * matches, an empty key_map will be sent to the lookup service; it should
     * likely reply with a global default route and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.GrpcKeyBuilder grpc_keybuilders = 2;</code>
     */
    public Builder addAllGrpcKeybuilders(
        Iterable<? extends GrpcKeyBuilder> values) {
      if (grpcKeybuildersBuilder_ == null) {
        ensureGrpcKeybuildersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, grpcKeybuilders_);
        onChanged();
      } else {
        grpcKeybuildersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Unordered specifications for constructing keys for gRPC requests.  All
     * GrpcKeyBuilders on this list must have unique "name" fields so that the
     * client is free to prebuild a hash map keyed by name.  If no GrpcKeyBuilder
     * matches, an empty key_map will be sent to the lookup service; it should
     * likely reply with a global default route and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.GrpcKeyBuilder grpc_keybuilders = 2;</code>
     */
    public Builder clearGrpcKeybuilders() {
      if (grpcKeybuildersBuilder_ == null) {
        grpcKeybuilders_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        grpcKeybuildersBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Unordered specifications for constructing keys for gRPC requests.  All
     * GrpcKeyBuilders on this list must have unique "name" fields so that the
     * client is free to prebuild a hash map keyed by name.  If no GrpcKeyBuilder
     * matches, an empty key_map will be sent to the lookup service; it should
     * likely reply with a global default route and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.GrpcKeyBuilder grpc_keybuilders = 2;</code>
     */
    public Builder removeGrpcKeybuilders(int index) {
      if (grpcKeybuildersBuilder_ == null) {
        ensureGrpcKeybuildersIsMutable();
        grpcKeybuilders_.remove(index);
        onChanged();
      } else {
        grpcKeybuildersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Unordered specifications for constructing keys for gRPC requests.  All
     * GrpcKeyBuilders on this list must have unique "name" fields so that the
     * client is free to prebuild a hash map keyed by name.  If no GrpcKeyBuilder
     * matches, an empty key_map will be sent to the lookup service; it should
     * likely reply with a global default route and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.GrpcKeyBuilder grpc_keybuilders = 2;</code>
     */
    public GrpcKeyBuilder.Builder getGrpcKeybuildersBuilder(
        int index) {
      return getGrpcKeybuildersFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Unordered specifications for constructing keys for gRPC requests.  All
     * GrpcKeyBuilders on this list must have unique "name" fields so that the
     * client is free to prebuild a hash map keyed by name.  If no GrpcKeyBuilder
     * matches, an empty key_map will be sent to the lookup service; it should
     * likely reply with a global default route and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.GrpcKeyBuilder grpc_keybuilders = 2;</code>
     */
    public GrpcKeyBuilderOrBuilder getGrpcKeybuildersOrBuilder(
        int index) {
      if (grpcKeybuildersBuilder_ == null) {
        return grpcKeybuilders_.get(index);  } else {
        return grpcKeybuildersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Unordered specifications for constructing keys for gRPC requests.  All
     * GrpcKeyBuilders on this list must have unique "name" fields so that the
     * client is free to prebuild a hash map keyed by name.  If no GrpcKeyBuilder
     * matches, an empty key_map will be sent to the lookup service; it should
     * likely reply with a global default route and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.GrpcKeyBuilder grpc_keybuilders = 2;</code>
     */
    public java.util.List<? extends GrpcKeyBuilderOrBuilder>
         getGrpcKeybuildersOrBuilderList() {
      if (grpcKeybuildersBuilder_ != null) {
        return grpcKeybuildersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(grpcKeybuilders_);
      }
    }
    /**
     * <pre>
     * Unordered specifications for constructing keys for gRPC requests.  All
     * GrpcKeyBuilders on this list must have unique "name" fields so that the
     * client is free to prebuild a hash map keyed by name.  If no GrpcKeyBuilder
     * matches, an empty key_map will be sent to the lookup service; it should
     * likely reply with a global default route and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.GrpcKeyBuilder grpc_keybuilders = 2;</code>
     */
    public GrpcKeyBuilder.Builder addGrpcKeybuildersBuilder() {
      return getGrpcKeybuildersFieldBuilder().addBuilder(
          GrpcKeyBuilder.getDefaultInstance());
    }
    /**
     * <pre>
     * Unordered specifications for constructing keys for gRPC requests.  All
     * GrpcKeyBuilders on this list must have unique "name" fields so that the
     * client is free to prebuild a hash map keyed by name.  If no GrpcKeyBuilder
     * matches, an empty key_map will be sent to the lookup service; it should
     * likely reply with a global default route and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.GrpcKeyBuilder grpc_keybuilders = 2;</code>
     */
    public GrpcKeyBuilder.Builder addGrpcKeybuildersBuilder(
        int index) {
      return getGrpcKeybuildersFieldBuilder().addBuilder(
          index, GrpcKeyBuilder.getDefaultInstance());
    }
    /**
     * <pre>
     * Unordered specifications for constructing keys for gRPC requests.  All
     * GrpcKeyBuilders on this list must have unique "name" fields so that the
     * client is free to prebuild a hash map keyed by name.  If no GrpcKeyBuilder
     * matches, an empty key_map will be sent to the lookup service; it should
     * likely reply with a global default route and raise an alert.
     * </pre>
     *
     * <code>repeated .grpc.lookup.v1.GrpcKeyBuilder grpc_keybuilders = 2;</code>
     */
    public java.util.List<GrpcKeyBuilder.Builder>
         getGrpcKeybuildersBuilderList() {
      return getGrpcKeybuildersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        GrpcKeyBuilder, GrpcKeyBuilder.Builder, GrpcKeyBuilderOrBuilder>
        getGrpcKeybuildersFieldBuilder() {
      if (grpcKeybuildersBuilder_ == null) {
        grpcKeybuildersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            GrpcKeyBuilder, GrpcKeyBuilder.Builder, GrpcKeyBuilderOrBuilder>(
                grpcKeybuilders_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        grpcKeybuilders_ = null;
      }
      return grpcKeybuildersBuilder_;
    }

    private Object lookupService_ = "";
    /**
     * <pre>
     * The name of the lookup service as a gRPC URI.  Typically, this will be
     * a subdomain of the target, such as "lookup.datastore.googleapis.com".
     * </pre>
     *
     * <code>string lookup_service = 3;</code>
     */
    public String getLookupService() {
      Object ref = lookupService_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        lookupService_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * The name of the lookup service as a gRPC URI.  Typically, this will be
     * a subdomain of the target, such as "lookup.datastore.googleapis.com".
     * </pre>
     *
     * <code>string lookup_service = 3;</code>
     */
    public com.google.protobuf.ByteString
        getLookupServiceBytes() {
      Object ref = lookupService_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        lookupService_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the lookup service as a gRPC URI.  Typically, this will be
     * a subdomain of the target, such as "lookup.datastore.googleapis.com".
     * </pre>
     *
     * <code>string lookup_service = 3;</code>
     */
    public Builder setLookupService(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      lookupService_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the lookup service as a gRPC URI.  Typically, this will be
     * a subdomain of the target, such as "lookup.datastore.googleapis.com".
     * </pre>
     *
     * <code>string lookup_service = 3;</code>
     */
    public Builder clearLookupService() {
      
      lookupService_ = getDefaultInstance().getLookupService();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the lookup service as a gRPC URI.  Typically, this will be
     * a subdomain of the target, such as "lookup.datastore.googleapis.com".
     * </pre>
     *
     * <code>string lookup_service = 3;</code>
     */
    public Builder setLookupServiceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      lookupService_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.Duration lookupServiceTimeout_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> lookupServiceTimeoutBuilder_;
    /**
     * <pre>
     * Configure a timeout value for lookup service requests.
     * Defaults to 10 seconds if not specified.
     * </pre>
     *
     * <code>.google.protobuf.Duration lookup_service_timeout = 4;</code>
     */
    public boolean hasLookupServiceTimeout() {
      return lookupServiceTimeoutBuilder_ != null || lookupServiceTimeout_ != null;
    }
    /**
     * <pre>
     * Configure a timeout value for lookup service requests.
     * Defaults to 10 seconds if not specified.
     * </pre>
     *
     * <code>.google.protobuf.Duration lookup_service_timeout = 4;</code>
     */
    public com.google.protobuf.Duration getLookupServiceTimeout() {
      if (lookupServiceTimeoutBuilder_ == null) {
        return lookupServiceTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : lookupServiceTimeout_;
      } else {
        return lookupServiceTimeoutBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Configure a timeout value for lookup service requests.
     * Defaults to 10 seconds if not specified.
     * </pre>
     *
     * <code>.google.protobuf.Duration lookup_service_timeout = 4;</code>
     */
    public Builder setLookupServiceTimeout(com.google.protobuf.Duration value) {
      if (lookupServiceTimeoutBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        lookupServiceTimeout_ = value;
        onChanged();
      } else {
        lookupServiceTimeoutBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Configure a timeout value for lookup service requests.
     * Defaults to 10 seconds if not specified.
     * </pre>
     *
     * <code>.google.protobuf.Duration lookup_service_timeout = 4;</code>
     */
    public Builder setLookupServiceTimeout(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (lookupServiceTimeoutBuilder_ == null) {
        lookupServiceTimeout_ = builderForValue.build();
        onChanged();
      } else {
        lookupServiceTimeoutBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Configure a timeout value for lookup service requests.
     * Defaults to 10 seconds if not specified.
     * </pre>
     *
     * <code>.google.protobuf.Duration lookup_service_timeout = 4;</code>
     */
    public Builder mergeLookupServiceTimeout(com.google.protobuf.Duration value) {
      if (lookupServiceTimeoutBuilder_ == null) {
        if (lookupServiceTimeout_ != null) {
          lookupServiceTimeout_ =
            com.google.protobuf.Duration.newBuilder(lookupServiceTimeout_).mergeFrom(value).buildPartial();
        } else {
          lookupServiceTimeout_ = value;
        }
        onChanged();
      } else {
        lookupServiceTimeoutBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Configure a timeout value for lookup service requests.
     * Defaults to 10 seconds if not specified.
     * </pre>
     *
     * <code>.google.protobuf.Duration lookup_service_timeout = 4;</code>
     */
    public Builder clearLookupServiceTimeout() {
      if (lookupServiceTimeoutBuilder_ == null) {
        lookupServiceTimeout_ = null;
        onChanged();
      } else {
        lookupServiceTimeout_ = null;
        lookupServiceTimeoutBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Configure a timeout value for lookup service requests.
     * Defaults to 10 seconds if not specified.
     * </pre>
     *
     * <code>.google.protobuf.Duration lookup_service_timeout = 4;</code>
     */
    public com.google.protobuf.Duration.Builder getLookupServiceTimeoutBuilder() {
      
      onChanged();
      return getLookupServiceTimeoutFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Configure a timeout value for lookup service requests.
     * Defaults to 10 seconds if not specified.
     * </pre>
     *
     * <code>.google.protobuf.Duration lookup_service_timeout = 4;</code>
     */
    public com.google.protobuf.DurationOrBuilder getLookupServiceTimeoutOrBuilder() {
      if (lookupServiceTimeoutBuilder_ != null) {
        return lookupServiceTimeoutBuilder_.getMessageOrBuilder();
      } else {
        return lookupServiceTimeout_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : lookupServiceTimeout_;
      }
    }
    /**
     * <pre>
     * Configure a timeout value for lookup service requests.
     * Defaults to 10 seconds if not specified.
     * </pre>
     *
     * <code>.google.protobuf.Duration lookup_service_timeout = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getLookupServiceTimeoutFieldBuilder() {
      if (lookupServiceTimeoutBuilder_ == null) {
        lookupServiceTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getLookupServiceTimeout(),
                getParentForChildren(),
                isClean());
        lookupServiceTimeout_ = null;
      }
      return lookupServiceTimeoutBuilder_;
    }

    private com.google.protobuf.Duration maxAge_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> maxAgeBuilder_;
    /**
     * <pre>
     * How long are responses valid for (like HTTP Cache-Control).
     * If omitted or zero, the longest valid cache time is used.
     * This value is clamped to 5 minutes to avoid unflushable bad responses.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_age = 5;</code>
     */
    public boolean hasMaxAge() {
      return maxAgeBuilder_ != null || maxAge_ != null;
    }
    /**
     * <pre>
     * How long are responses valid for (like HTTP Cache-Control).
     * If omitted or zero, the longest valid cache time is used.
     * This value is clamped to 5 minutes to avoid unflushable bad responses.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_age = 5;</code>
     */
    public com.google.protobuf.Duration getMaxAge() {
      if (maxAgeBuilder_ == null) {
        return maxAge_ == null ? com.google.protobuf.Duration.getDefaultInstance() : maxAge_;
      } else {
        return maxAgeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * How long are responses valid for (like HTTP Cache-Control).
     * If omitted or zero, the longest valid cache time is used.
     * This value is clamped to 5 minutes to avoid unflushable bad responses.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_age = 5;</code>
     */
    public Builder setMaxAge(com.google.protobuf.Duration value) {
      if (maxAgeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        maxAge_ = value;
        onChanged();
      } else {
        maxAgeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * How long are responses valid for (like HTTP Cache-Control).
     * If omitted or zero, the longest valid cache time is used.
     * This value is clamped to 5 minutes to avoid unflushable bad responses.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_age = 5;</code>
     */
    public Builder setMaxAge(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (maxAgeBuilder_ == null) {
        maxAge_ = builderForValue.build();
        onChanged();
      } else {
        maxAgeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * How long are responses valid for (like HTTP Cache-Control).
     * If omitted or zero, the longest valid cache time is used.
     * This value is clamped to 5 minutes to avoid unflushable bad responses.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_age = 5;</code>
     */
    public Builder mergeMaxAge(com.google.protobuf.Duration value) {
      if (maxAgeBuilder_ == null) {
        if (maxAge_ != null) {
          maxAge_ =
            com.google.protobuf.Duration.newBuilder(maxAge_).mergeFrom(value).buildPartial();
        } else {
          maxAge_ = value;
        }
        onChanged();
      } else {
        maxAgeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * How long are responses valid for (like HTTP Cache-Control).
     * If omitted or zero, the longest valid cache time is used.
     * This value is clamped to 5 minutes to avoid unflushable bad responses.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_age = 5;</code>
     */
    public Builder clearMaxAge() {
      if (maxAgeBuilder_ == null) {
        maxAge_ = null;
        onChanged();
      } else {
        maxAge_ = null;
        maxAgeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * How long are responses valid for (like HTTP Cache-Control).
     * If omitted or zero, the longest valid cache time is used.
     * This value is clamped to 5 minutes to avoid unflushable bad responses.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_age = 5;</code>
     */
    public com.google.protobuf.Duration.Builder getMaxAgeBuilder() {
      
      onChanged();
      return getMaxAgeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * How long are responses valid for (like HTTP Cache-Control).
     * If omitted or zero, the longest valid cache time is used.
     * This value is clamped to 5 minutes to avoid unflushable bad responses.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_age = 5;</code>
     */
    public com.google.protobuf.DurationOrBuilder getMaxAgeOrBuilder() {
      if (maxAgeBuilder_ != null) {
        return maxAgeBuilder_.getMessageOrBuilder();
      } else {
        return maxAge_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : maxAge_;
      }
    }
    /**
     * <pre>
     * How long are responses valid for (like HTTP Cache-Control).
     * If omitted or zero, the longest valid cache time is used.
     * This value is clamped to 5 minutes to avoid unflushable bad responses.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_age = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getMaxAgeFieldBuilder() {
      if (maxAgeBuilder_ == null) {
        maxAgeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getMaxAge(),
                getParentForChildren(),
                isClean());
        maxAge_ = null;
      }
      return maxAgeBuilder_;
    }

    private com.google.protobuf.Duration staleAge_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> staleAgeBuilder_;
    /**
     * <pre>
     * After a response has been in the client cache for this amount of time
     * and is re-requested, start an asynchronous RPC to re-validate it.
     * This value should be less than max_age by at least the length of a
     * typical RTT to the Route Lookup Service to fully mask the RTT latency.
     * If omitted, keys are only re-requested after they have expired.
     * </pre>
     *
     * <code>.google.protobuf.Duration stale_age = 6;</code>
     */
    public boolean hasStaleAge() {
      return staleAgeBuilder_ != null || staleAge_ != null;
    }
    /**
     * <pre>
     * After a response has been in the client cache for this amount of time
     * and is re-requested, start an asynchronous RPC to re-validate it.
     * This value should be less than max_age by at least the length of a
     * typical RTT to the Route Lookup Service to fully mask the RTT latency.
     * If omitted, keys are only re-requested after they have expired.
     * </pre>
     *
     * <code>.google.protobuf.Duration stale_age = 6;</code>
     */
    public com.google.protobuf.Duration getStaleAge() {
      if (staleAgeBuilder_ == null) {
        return staleAge_ == null ? com.google.protobuf.Duration.getDefaultInstance() : staleAge_;
      } else {
        return staleAgeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * After a response has been in the client cache for this amount of time
     * and is re-requested, start an asynchronous RPC to re-validate it.
     * This value should be less than max_age by at least the length of a
     * typical RTT to the Route Lookup Service to fully mask the RTT latency.
     * If omitted, keys are only re-requested after they have expired.
     * </pre>
     *
     * <code>.google.protobuf.Duration stale_age = 6;</code>
     */
    public Builder setStaleAge(com.google.protobuf.Duration value) {
      if (staleAgeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        staleAge_ = value;
        onChanged();
      } else {
        staleAgeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * After a response has been in the client cache for this amount of time
     * and is re-requested, start an asynchronous RPC to re-validate it.
     * This value should be less than max_age by at least the length of a
     * typical RTT to the Route Lookup Service to fully mask the RTT latency.
     * If omitted, keys are only re-requested after they have expired.
     * </pre>
     *
     * <code>.google.protobuf.Duration stale_age = 6;</code>
     */
    public Builder setStaleAge(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (staleAgeBuilder_ == null) {
        staleAge_ = builderForValue.build();
        onChanged();
      } else {
        staleAgeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * After a response has been in the client cache for this amount of time
     * and is re-requested, start an asynchronous RPC to re-validate it.
     * This value should be less than max_age by at least the length of a
     * typical RTT to the Route Lookup Service to fully mask the RTT latency.
     * If omitted, keys are only re-requested after they have expired.
     * </pre>
     *
     * <code>.google.protobuf.Duration stale_age = 6;</code>
     */
    public Builder mergeStaleAge(com.google.protobuf.Duration value) {
      if (staleAgeBuilder_ == null) {
        if (staleAge_ != null) {
          staleAge_ =
            com.google.protobuf.Duration.newBuilder(staleAge_).mergeFrom(value).buildPartial();
        } else {
          staleAge_ = value;
        }
        onChanged();
      } else {
        staleAgeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * After a response has been in the client cache for this amount of time
     * and is re-requested, start an asynchronous RPC to re-validate it.
     * This value should be less than max_age by at least the length of a
     * typical RTT to the Route Lookup Service to fully mask the RTT latency.
     * If omitted, keys are only re-requested after they have expired.
     * </pre>
     *
     * <code>.google.protobuf.Duration stale_age = 6;</code>
     */
    public Builder clearStaleAge() {
      if (staleAgeBuilder_ == null) {
        staleAge_ = null;
        onChanged();
      } else {
        staleAge_ = null;
        staleAgeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * After a response has been in the client cache for this amount of time
     * and is re-requested, start an asynchronous RPC to re-validate it.
     * This value should be less than max_age by at least the length of a
     * typical RTT to the Route Lookup Service to fully mask the RTT latency.
     * If omitted, keys are only re-requested after they have expired.
     * </pre>
     *
     * <code>.google.protobuf.Duration stale_age = 6;</code>
     */
    public com.google.protobuf.Duration.Builder getStaleAgeBuilder() {
      
      onChanged();
      return getStaleAgeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * After a response has been in the client cache for this amount of time
     * and is re-requested, start an asynchronous RPC to re-validate it.
     * This value should be less than max_age by at least the length of a
     * typical RTT to the Route Lookup Service to fully mask the RTT latency.
     * If omitted, keys are only re-requested after they have expired.
     * </pre>
     *
     * <code>.google.protobuf.Duration stale_age = 6;</code>
     */
    public com.google.protobuf.DurationOrBuilder getStaleAgeOrBuilder() {
      if (staleAgeBuilder_ != null) {
        return staleAgeBuilder_.getMessageOrBuilder();
      } else {
        return staleAge_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : staleAge_;
      }
    }
    /**
     * <pre>
     * After a response has been in the client cache for this amount of time
     * and is re-requested, start an asynchronous RPC to re-validate it.
     * This value should be less than max_age by at least the length of a
     * typical RTT to the Route Lookup Service to fully mask the RTT latency.
     * If omitted, keys are only re-requested after they have expired.
     * </pre>
     *
     * <code>.google.protobuf.Duration stale_age = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getStaleAgeFieldBuilder() {
      if (staleAgeBuilder_ == null) {
        staleAgeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getStaleAge(),
                getParentForChildren(),
                isClean());
        staleAge_ = null;
      }
      return staleAgeBuilder_;
    }

    private long cacheSizeBytes_ ;
    /**
     * <pre>
     * Rough indicator of amount of memory to use for the client cache.  Some of
     * the data structure overhead is not accounted for, so actual memory consumed
     * will be somewhat greater than this value.  If this field is omitted or set
     * to zero, a client default will be used.  The value may be capped to a lower
     * amount based on client configuration.
     * </pre>
     *
     * <code>int64 cache_size_bytes = 7;</code>
     */
    public long getCacheSizeBytes() {
      return cacheSizeBytes_;
    }
    /**
     * <pre>
     * Rough indicator of amount of memory to use for the client cache.  Some of
     * the data structure overhead is not accounted for, so actual memory consumed
     * will be somewhat greater than this value.  If this field is omitted or set
     * to zero, a client default will be used.  The value may be capped to a lower
     * amount based on client configuration.
     * </pre>
     *
     * <code>int64 cache_size_bytes = 7;</code>
     */
    public Builder setCacheSizeBytes(long value) {
      
      cacheSizeBytes_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Rough indicator of amount of memory to use for the client cache.  Some of
     * the data structure overhead is not accounted for, so actual memory consumed
     * will be somewhat greater than this value.  If this field is omitted or set
     * to zero, a client default will be used.  The value may be capped to a lower
     * amount based on client configuration.
     * </pre>
     *
     * <code>int64 cache_size_bytes = 7;</code>
     */
    public Builder clearCacheSizeBytes() {
      
      cacheSizeBytes_ = 0L;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList validTargets_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureValidTargetsIsMutable() {
      if (!((bitField0_ & 0x00000080) == 0x00000080)) {
        validTargets_ = new com.google.protobuf.LazyStringArrayList(validTargets_);
        bitField0_ |= 0x00000080;
       }
    }
    /**
     * <pre>
     * This is a list of all the possible targets that can be returned by the
     * lookup service.  If a target not on this list is returned, it will be
     * treated the same as an RPC error from the RLS.
     * </pre>
     *
     * <code>repeated string valid_targets = 8;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getValidTargetsList() {
      return validTargets_.getUnmodifiableView();
    }
    /**
     * <pre>
     * This is a list of all the possible targets that can be returned by the
     * lookup service.  If a target not on this list is returned, it will be
     * treated the same as an RPC error from the RLS.
     * </pre>
     *
     * <code>repeated string valid_targets = 8;</code>
     */
    public int getValidTargetsCount() {
      return validTargets_.size();
    }
    /**
     * <pre>
     * This is a list of all the possible targets that can be returned by the
     * lookup service.  If a target not on this list is returned, it will be
     * treated the same as an RPC error from the RLS.
     * </pre>
     *
     * <code>repeated string valid_targets = 8;</code>
     */
    public String getValidTargets(int index) {
      return validTargets_.get(index);
    }
    /**
     * <pre>
     * This is a list of all the possible targets that can be returned by the
     * lookup service.  If a target not on this list is returned, it will be
     * treated the same as an RPC error from the RLS.
     * </pre>
     *
     * <code>repeated string valid_targets = 8;</code>
     */
    public com.google.protobuf.ByteString
        getValidTargetsBytes(int index) {
      return validTargets_.getByteString(index);
    }
    /**
     * <pre>
     * This is a list of all the possible targets that can be returned by the
     * lookup service.  If a target not on this list is returned, it will be
     * treated the same as an RPC error from the RLS.
     * </pre>
     *
     * <code>repeated string valid_targets = 8;</code>
     */
    public Builder setValidTargets(
        int index, String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureValidTargetsIsMutable();
      validTargets_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This is a list of all the possible targets that can be returned by the
     * lookup service.  If a target not on this list is returned, it will be
     * treated the same as an RPC error from the RLS.
     * </pre>
     *
     * <code>repeated string valid_targets = 8;</code>
     */
    public Builder addValidTargets(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureValidTargetsIsMutable();
      validTargets_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This is a list of all the possible targets that can be returned by the
     * lookup service.  If a target not on this list is returned, it will be
     * treated the same as an RPC error from the RLS.
     * </pre>
     *
     * <code>repeated string valid_targets = 8;</code>
     */
    public Builder addAllValidTargets(
        Iterable<String> values) {
      ensureValidTargetsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, validTargets_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This is a list of all the possible targets that can be returned by the
     * lookup service.  If a target not on this list is returned, it will be
     * treated the same as an RPC error from the RLS.
     * </pre>
     *
     * <code>repeated string valid_targets = 8;</code>
     */
    public Builder clearValidTargets() {
      validTargets_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000080);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This is a list of all the possible targets that can be returned by the
     * lookup service.  If a target not on this list is returned, it will be
     * treated the same as an RPC error from the RLS.
     * </pre>
     *
     * <code>repeated string valid_targets = 8;</code>
     */
    public Builder addValidTargetsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureValidTargetsIsMutable();
      validTargets_.add(value);
      onChanged();
      return this;
    }

    private Object defaultTarget_ = "";
    /**
     * <pre>
     * This value provides a default target to use if needed.  It will be used for
     * request processing strategy SYNC_LOOKUP_DEFAULT_TARGET_ON_ERROR if RLS
     * returns an error, or strategy ASYNC_LOOKUP_DEFAULT_TARGET_ON_MISS if RLS
     * returns an error or there is a cache miss in the client.  It will also be
     * used if there are no healthy backends for an RLS target.  Note that
     * requests can be routed only to a subdomain of the original target,
     * e.g. "us_east_1.cloudbigtable.googleapis.com".
     * </pre>
     *
     * <code>string default_target = 9;</code>
     */
    public String getDefaultTarget() {
      Object ref = defaultTarget_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        defaultTarget_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * This value provides a default target to use if needed.  It will be used for
     * request processing strategy SYNC_LOOKUP_DEFAULT_TARGET_ON_ERROR if RLS
     * returns an error, or strategy ASYNC_LOOKUP_DEFAULT_TARGET_ON_MISS if RLS
     * returns an error or there is a cache miss in the client.  It will also be
     * used if there are no healthy backends for an RLS target.  Note that
     * requests can be routed only to a subdomain of the original target,
     * e.g. "us_east_1.cloudbigtable.googleapis.com".
     * </pre>
     *
     * <code>string default_target = 9;</code>
     */
    public com.google.protobuf.ByteString
        getDefaultTargetBytes() {
      Object ref = defaultTarget_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        defaultTarget_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * This value provides a default target to use if needed.  It will be used for
     * request processing strategy SYNC_LOOKUP_DEFAULT_TARGET_ON_ERROR if RLS
     * returns an error, or strategy ASYNC_LOOKUP_DEFAULT_TARGET_ON_MISS if RLS
     * returns an error or there is a cache miss in the client.  It will also be
     * used if there are no healthy backends for an RLS target.  Note that
     * requests can be routed only to a subdomain of the original target,
     * e.g. "us_east_1.cloudbigtable.googleapis.com".
     * </pre>
     *
     * <code>string default_target = 9;</code>
     */
    public Builder setDefaultTarget(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      defaultTarget_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This value provides a default target to use if needed.  It will be used for
     * request processing strategy SYNC_LOOKUP_DEFAULT_TARGET_ON_ERROR if RLS
     * returns an error, or strategy ASYNC_LOOKUP_DEFAULT_TARGET_ON_MISS if RLS
     * returns an error or there is a cache miss in the client.  It will also be
     * used if there are no healthy backends for an RLS target.  Note that
     * requests can be routed only to a subdomain of the original target,
     * e.g. "us_east_1.cloudbigtable.googleapis.com".
     * </pre>
     *
     * <code>string default_target = 9;</code>
     */
    public Builder clearDefaultTarget() {
      
      defaultTarget_ = getDefaultInstance().getDefaultTarget();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This value provides a default target to use if needed.  It will be used for
     * request processing strategy SYNC_LOOKUP_DEFAULT_TARGET_ON_ERROR if RLS
     * returns an error, or strategy ASYNC_LOOKUP_DEFAULT_TARGET_ON_MISS if RLS
     * returns an error or there is a cache miss in the client.  It will also be
     * used if there are no healthy backends for an RLS target.  Note that
     * requests can be routed only to a subdomain of the original target,
     * e.g. "us_east_1.cloudbigtable.googleapis.com".
     * </pre>
     *
     * <code>string default_target = 9;</code>
     */
    public Builder setDefaultTargetBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      defaultTarget_ = value;
      onChanged();
      return this;
    }

    private int requestProcessingStrategy_ = 0;
    /**
     * <code>.grpc.lookup.v1.RouteLookupConfig.RequestProcessingStrategy request_processing_strategy = 10;</code>
     */
    public int getRequestProcessingStrategyValue() {
      return requestProcessingStrategy_;
    }
    /**
     * <code>.grpc.lookup.v1.RouteLookupConfig.RequestProcessingStrategy request_processing_strategy = 10;</code>
     */
    public Builder setRequestProcessingStrategyValue(int value) {
      requestProcessingStrategy_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.grpc.lookup.v1.RouteLookupConfig.RequestProcessingStrategy request_processing_strategy = 10;</code>
     */
    public RequestProcessingStrategy getRequestProcessingStrategy() {
      RequestProcessingStrategy result = RequestProcessingStrategy.valueOf(requestProcessingStrategy_);
      return result == null ? RequestProcessingStrategy.UNRECOGNIZED : result;
    }
    /**
     * <code>.grpc.lookup.v1.RouteLookupConfig.RequestProcessingStrategy request_processing_strategy = 10;</code>
     */
    public Builder setRequestProcessingStrategy(RequestProcessingStrategy value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      requestProcessingStrategy_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.grpc.lookup.v1.RouteLookupConfig.RequestProcessingStrategy request_processing_strategy = 10;</code>
     */
    public Builder clearRequestProcessingStrategy() {
      
      requestProcessingStrategy_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:grpc.lookup.v1.RouteLookupConfig)
  }

  // @@protoc_insertion_point(class_scope:grpc.lookup.v1.RouteLookupConfig)
  private static final RouteLookupConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new RouteLookupConfig();
  }

  public static RouteLookupConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RouteLookupConfig>
      PARSER = new com.google.protobuf.AbstractParser<RouteLookupConfig>() {
    public RouteLookupConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new RouteLookupConfig(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<RouteLookupConfig> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<RouteLookupConfig> getParserForType() {
    return PARSER;
  }

  public RouteLookupConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

